/******************************************************************************
**              Copyright (C) 2019 Laird Connectivity
**
** Project:     Intelligent Serial Dongle - Host AT Processor
**
** Module:      EMPTYHOST.CPP
**
*******************************************************************************/

/******************************************************************************/
// CONDITIONAL COMPILE DEFINES
/******************************************************************************/

/******************************************************************************/
// Include Files
/******************************************************************************/
#include "Target.h"

#include "EmptyHost.h"
#include "TRegression.h"
#include "Misc.h"
/******************************************************************************/
// Local Defines
/******************************************************************************/

/******************************************************************************/
// Local Macros
/******************************************************************************/

/******************************************************************************/
// Local Forward Class,Struct & Union Declarations
/******************************************************************************/

/******************************************************************************/
// Local Class,Struct,Union Typedefs
/******************************************************************************/

/******************************************************************************/
// External Variable Declarations
/******************************************************************************/

/******************************************************************************/
// Global/Static Variable Declarations
/******************************************************************************/

/******************************************************************************/
// External Function Declarations
/******************************************************************************/

/******************************************************************************/
// Local Forward Function Declarations
/******************************************************************************/

/******************************************************************************/
/******************************************************************************/
// Local Functions or Private Members
/******************************************************************************/
/******************************************************************************/

/******************************************************************************/
/******************************************************************************/
// Global Functions or Public Members
/******************************************************************************/
/******************************************************************************/

//------------------------------------------------------------------------------
// Constructor
//------------------------------------------------------------------------------
EmptyHost::EmptyHost(TRegression *pRegression, unsigned int nLogicalPort) :
    TBaseHost(pRegression,nLogicalPort)
{
    SetHostType("EMPTY");
}

//------------------------------------------------------------------------------
// Destructor
//------------------------------------------------------------------------------
__fastcall EmptyHost::~EmptyHost()
{
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
TBaseHost *CreateEmptyHost(TRegression *pRegression, unsigned int nLogicalPort)
{
    TBaseHost *pHost = new EmptyHost(pRegression,nLogicalPort);
    return pHost;
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::Close(void)
{
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
bool EmptyHost::Open(int nComport, UBaseOpenParms *pParms)
{
    return false;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
bool EmptyHost::IsOpen(void)
{
    return false;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
bool EmptyHost::ChangeCommsParameters(UBaseOpenParms *pCommParms)
{
    return false;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
unsigned short EmptyHost::TransmitBlock(unsigned char *pSendBlock,unsigned short nBlockLen)
{
    return 0;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
bool EmptyHost::GetCTS(void)
{
    return false;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
bool EmptyHost::GetDSR(void)
{
    return false;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
bool EmptyHost::GetRI(void)
{
    return false;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
bool EmptyHost::GetDCD(void)
{
    return false;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::SetDTR(bool newState)
{
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::SetRTS(bool newState)
{
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::SendCommand(char *pCmd)
{
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::SendString(char *pCmd)
{
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::SendBlock(unsigned char *pCmd, int nBlockLen)
{
}

//=============================================================================
//=============================================================================
void EmptyHost::SendDataBlock(int nChannel, unsigned char *pCmd, int nBlockLen)
{
    SendBlock(pCmd, nBlockLen);
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
char * EmptyHost::SetRxFilterPattern(char *pPattern,unsigned short nPatternLen, int nSearchType)
{
    return "";
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
char * EmptyHost::GetFullResponse(void)
{
    return NULL;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::SetBreak(void)
{
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::ClearBreak(void)
{
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::DeAssertDTR(void)
{
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::AssertDTR(void)
{
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::FlushRxBuffer(void)
{
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void EmptyHost::FlushTxBuffer(void)
{
}

//=============================================================================
//=============================================================================
bool EmptyHost::IsAllowedSendOutcome(EExpectedOutcome eOutCome)
{
    return true;
}

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
int EmptyHost::PortIoctl(int ioctlId, int nArg, void *pInArg, void *pOutArg)
{
    return 0;
}



/******************************************************************************/
// END OF FILE
/******************************************************************************/


