/******************************************************************************
**              Copyright (C) 2018 Laird Connectivity
**
** Module:      TPipeCache.H
**
*******************************************************************************/

#if !defined(_TPIPECACHE_H)     /* prevent multiple inclusions */
#define _TPIPECACHE_H

/******************************************************************************/
// Include Files
/******************************************************************************/
#include <Classes.hpp>
#include <Controls.hpp>
#include <StdCtrls.hpp>
#include <Forms.hpp>
#include <ScktComp.hpp>

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <conio.h>
#include <assert.h>

/******************************************************************************/
// Defines
/******************************************************************************/
#define MIN_COMMAND_RESPONSE_CACHE_SIZE    0x2000

/******************************************************************************/
// Macros
/******************************************************************************/

/******************************************************************************/
// Enum Typedefs
/******************************************************************************/

/******************************************************************************/
// Simple (non struct/union) Typedefs
/******************************************************************************/

/******************************************************************************/
// Forward declaration of Class, Struct & Unions
/******************************************************************************/

/******************************************************************************/
// Struct & Class definitions
/******************************************************************************/

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
class CPipeCache
{
public:
    CPipeCache(int size);
    virtual ~CPipeCache();
    int Read( char * data, int nMaxBytes );
    int Write(char * data, int nBytes );
    int GetSpace();
    void Flush() {mnTail = mnHead;} ;

private:
    char                  * mpCache;
    int                     mnSize;    //bytes
    int                     mnHead;
    int                     mnTail;
};


/******************************************************************************/
// Struct definitions
/******************************************************************************/

/******************************************************************************/
// Union definitions
/******************************************************************************/

/******************************************************************************/
// Global Functions (API etc) exported for other modules
/******************************************************************************/

#endif /* Prevention of multiple inclusion */
/******************************************************************************/
// END OF FILE
/******************************************************************************/


